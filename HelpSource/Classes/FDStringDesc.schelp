TITLE:: FDStringDesc
SUMMARY:: describes the physical properties of a linear string with stiffness and loss
CATEGORIES:: Physical Modelling, Sound Synthesis
RELATED:: Classes/FDObjNetwork, Classes/FDPlateDesc

DESCRIPTION::
CODE::FDStringDesc:: is a description of a stiff, linear string with loss. If CODE::gamma:: is zero the object represent the description of a thin, linear bar with loss instead.

CLASSMETHODS::

METHOD:: new
Create a new instance of CODE::FDStringDesc::.

ARGUMENT:: gamma
A LINK::Classes/SimpleNumber:: denoting the spatially scaled wavespeed.
WARNING::
Note that it is generally not adviced to use very small, non-zero values for CODE::gamma:: as the smaller the value for CODE::gamma::, the larger the number of modes will be. As a consequence, the calculation time might increase significantly and in the worst case either Python or SuperCollider will choke on the amount of data it needs to process resulting in no modal data at all. A zero value for CODE::gamma:: is perfectly fine though, provided that CODE::kappa:: is non-zero and relatively large (e.g. CODE::kappa > 2::).
::

ARGUMENT:: kappa
A LINK::Classes/SimpleNumber:: denoting a spatially scaled stiffness parameter.

ARGUMENT:: b1
A LINK::Classes/SimpleNumber:: denoting a frequency independent damping constant.

ARGUMENT:: b2
A LINK::Classes/SimpleNumber:: denoting a frequency dependent damping constant.

ARGUMENT:: boundaryCond
A LINK::Classes/Symbol:: denoting a valid 1D boundary condition.

returns:: A new instance of CODE::FDStringDesc::.

METHOD:: validBoundaryConds
Get an overview of all valid 1D boundary condition combinations.

returns::An immutable LINK::Classes/Array:: of valid 1D boundary conditions.

INSTANCEMETHODS::

METHOD:: pythonString
Generate a string which can be intepretated as a valid Python object.

returns:: A LINK::Classes/String:: representing an equivalent Python object.

PRIVATE:: boundaryCond

EXAMPLES::

CODE::
// create a new instance of FDStringDesc with given physical parameters and print the corresponding python object as a string
(
var stringDesc = FDStringDesc(200,1,0.698698,0.001515,\bothClamped);
stringDesc.pythonString
)
::